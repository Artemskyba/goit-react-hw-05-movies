{"version":3,"file":"static/js/331.8640c3d9.chunk.js","mappings":"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","sources":["api.js","components/movies-list/movie-list.styled.jsx","components/movies-list/movies-list.jsx","components/search-form/search-form.jsx","pages/movies/movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\naxios.defaults.params = {\n  api_key: 'e0f61313dcf9f8698c9430989ed8bb6d',\n};\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`3/trending/movie/day`);\n  return response.data.results;\n};\n\nexport const fetchByQuery = async query => {\n  const response = await axios.get(`3/search/movie?query=${query}`);\n  return response.data.results;\n};\n\nexport const fetchById = async id => {\n  const response = await axios.get(`3/movie/${id}`);\n  return response.data;\n};\n\nexport const fetchCastId = async id => {\n  const response = await axios.get(`3/movie/${id}/credits`);\n  return response.data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(`/3/movie/${id}/reviews`);\n  return response.data.results;\n};\n","import styled from 'styled-components';\nimport { NavLink as Link } from 'react-router-dom';\n\nexport const MoviesStyledList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 60px;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const MovieListCard = styled.li`\n  width: calc((100% - 100px) / 6);\n`;\n\nexport const NavLink = styled(Link)`\n  & :hover {\n    color: gray;\n  }\n`;\n\nexport const Title = styled.p`\n  margin-top: 15px;\n  font-size: 25px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  MovieListCard,\n  MoviesStyledList,\n  NavLink,\n  Title,\n} from './movie-list.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const baseImgUrl = 'https://image.tmdb.org/t/p/w200';\n  const defaultImg =\n    'https://shop.stryi-tur.info/wp-content/uploads/2022/11/161.jpg';\n  const location = useLocation();\n  return (\n    <MoviesStyledList>\n      {movies.map(({ poster_path, original_title, id }) => {\n        return (\n          <MovieListCard key={id}>\n            <NavLink to={`/movies/${id}`} state={{ from: location }}>\n              <img\n                src={poster_path ? `${baseImgUrl}${poster_path}` : defaultImg}\n                alt={original_title}\n              />\n              <Title>{original_title}</Title>\n            </NavLink>\n          </MovieListCard>\n        );\n      })}\n    </MoviesStyledList>\n  );\n};\n","import { Formik, Form, Field } from 'formik';\n\nexport const SearchForm = ({ onSubmit }) => (\n  <Formik\n    initialValues={{\n      searchQuery: '',\n    }}\n    onSubmit={values => {\n      onSubmit(values.searchQuery);\n    }}\n  >\n    <Form>\n      <button type=\"submit\">SEARCH</button>\n      <Field id=\"searchQuery\" name=\"searchQuery\" />\n    </Form>\n  </Formik>\n);\n","import { fetchByQuery } from 'api';\nimport { MoviesList } from 'components/movies-list/movies-list';\nimport { SearchForm } from 'components/search-form/search-form';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nexport default function Movies() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [params, setParams] = useSearchParams();\n  const query = params.get('query') ?? '';\n\n  const handleSubmit = searchQuery => {\n    setParams({ query: searchQuery });\n  };\n\n  useEffect(() => {\n    async function fetchMoviesByQuery() {\n      try {\n        if (query.trim() !== '') {\n          setIsLoading(true);\n          const response = await fetchByQuery(query);\n          setMovies(response);\n        }\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchMoviesByQuery();\n  }, [query]);\n\n  return (\n    <>\n      <SearchForm onSubmit={handleSubmit} />\n      {isLoading ? (\n        <div>LOADING</div>\n      ) : error ? (\n        <div>\n          <b>:{'\\u0028'}</b>Something went wrong{' '}\n        </div>\n      ) : (\n        <MoviesList movies={movies} />\n      )}\n    </>\n  );\n}\n"],"names":["axios","api_key","fetchTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","abrupt","data","results","stop","apply","arguments","fetchByQuery","_ref2","_callee2","query","_context2","concat","_x","fetchById","_ref3","_callee3","id","_context3","_x2","fetchCastId","_ref4","_callee4","_context4","cast","_x3","fetchReviews","_ref5","_callee5","_context5","_x4","MoviesStyledList","styled","_templateObject","_taggedTemplateLiteral","MovieListCard","_templateObject2","NavLink","Link","_templateObject3","Title","_templateObject4","MoviesList","movies","location","useLocation","_jsx","children","map","poster_path","original_title","_jsxs","to","state","from","src","alt","SearchForm","onSubmit","Formik","initialValues","searchQuery","values","Form","type","Field","name","Movies","_params$get","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","_useSearchParams","useSearchParams","_useSearchParams2","params","setParams","get","useEffect","_fetchMoviesByQuery","trim","t0","finish","fetchMoviesByQuery","_Fragment"],"sourceRoot":""}