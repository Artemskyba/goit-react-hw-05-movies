{"version":3,"file":"static/js/516.13086481.chunk.js","mappings":"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","sources":["api.js","components/cast/cast.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\naxios.defaults.params = {\n  api_key: 'e0f61313dcf9f8698c9430989ed8bb6d',\n};\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`3/trending/movie/day`);\n  return response.data.results;\n};\n\nexport const fetchByQuery = async query => {\n  const response = await axios.get(`3/search/movie?query=${query}`);\n  return response.data.results;\n};\n\nexport const fetchById = async id => {\n  const response = await axios.get(`3/movie/${id}`);\n  return response.data;\n};\n\nexport const fetchCastId = async id => {\n  const response = await axios.get(`3/movie/${id}/credits`);\n  return response.data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(`/3/movie/${id}/reviews`);\n  return response.data.results;\n};\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchCastId } from '../../api';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function fetchCastByMovie() {\n      try {\n        setIsLoading(true);\n        const response = await fetchCastId(movieId);\n        setCast(response);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchCastByMovie();\n  }, [movieId]);\n\n  const baseImgUrl = 'https://image.tmdb.org/t/p/w200';\n  const defaultImg =\n    'https://img.freepik.com/premium-vector/cool-man-profile-photo-icon-profile-icon-male-head-face-flat-design-vector-illustration_750364-393.jpg?w=200';\n  return isLoading ? (\n    <div>LOADING</div>\n  ) : error ? (\n    <div>\n      <b>:{'\\u0028'}</b>Something went wrong{' '}\n    </div>\n  ) : (\n    <ul>\n      {cast.map(({ character, id, name, profile_path }) => {\n        return (\n          <li key={id}>\n            <img\n              src={profile_path ? `${baseImgUrl}${profile_path}` : defaultImg}\n              alt=\"original_name\"\n            />\n            <h3>{character}</h3>\n            <p>{name}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n"],"names":["axios","api_key","fetchTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","abrupt","data","results","stop","apply","arguments","fetchByQuery","_ref2","_callee2","query","_context2","concat","_x","fetchById","_ref3","_callee3","id","_context3","_x2","fetchCastId","_ref4","_callee4","_context4","cast","_x3","fetchReviews","_ref5","_callee5","_context5","_x4","Cast","movieId","useParams","_useState","useState","_useState2","_slicedToArray","setCast","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","_fetchCastByMovie","t0","finish","fetchCastByMovie","_jsx","children","_jsxs","map","character","name","profile_path","src","alt"],"sourceRoot":""}